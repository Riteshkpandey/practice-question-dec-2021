You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]

solution
class Solution {
    public void rotate(int[][] matrix) {
        int row=matrix.length,col=matrix[0].length;
        int nr=0,nc=0;
        for(int i=nr;i<row;i++)
        {
            for(int j=nc;j<col;j++)
            {
                if(j==col-1)
                {
                    nr=nc=i+1;
                }
                if(i!=j)
                {
                    swap(matrix,i,j);
                }
            }
        }
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
                System.out.println(matrix[i][j]);
        }

        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col/2;j++)
                swapHorizontally(matrix,i,j,i,col-1-j);
        }
        
    }
    private void swap(int[][] matrix,int i,int j)
    {
        int temp=matrix[i][j];
        matrix[i][j]=matrix[j][i];
        matrix[j][i]=temp;
    }
    private void swapHorizontally(int[][] matrix,int i,int j, int ni, int nj)
    {
        int temp=matrix[i][j];
        matrix[i][j]=matrix[ni][nj];
        matrix[ni][nj]=temp;
    }
}
